
<div class="kanban">
    @foreach (var col in _columnsOrder)
    {
        <div class="kanban-col"
             ondragover="event.preventDefault()"
             @ondrop="@(() => OnDrop(col))">
            <div class="kanban-col-header">
                <span class="badge bg-secondary">@col</span>
                <span class="count">@(_columns[col].Count)</span>
            </div>

            @if (_columns[col].Count == 0)
            {
                <div class="kanban-empty">Move task here</div>
            }

            @foreach (var t in _columns[col])
            {
                var busy = _busyTasks.Contains(t.Id);

                <TaskKanbanCard
                    Task="t"
                    Class="@(busy ? "busy" : null)"
                    AdditionalAttributes="@(new Dictionary<string, object>
                                          {
                                              {"draggable", true.ToString()},
                                              {"ondragstart", () => OnDragStart(t.Id)}
                                          })"/>
            }
        </div>
    }
</div>

@if (!string.IsNullOrWhiteSpace(_error))
{
    <div class="alert alert-danger mt-3">@_error</div>
}

@code {
    
}
