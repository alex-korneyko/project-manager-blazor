@using ProjectManager.Components.Modals
@using ProjectManager.Components.Modals.Modal

<div class="kanban">
    @foreach (var col in _columnsOrder)
    {
        <div class="kanban-col @(_hover[col] ? "drop-target" : null)"
             @ondragenter="@(() => OnDragEnter(col))"
             @ondragleave="@(() => OnDragLeave(col))"
             @ondragover="@(() => { })"
             @ondragover:preventDefault="true"
             @ondragenter:preventDefault="true"
             @ondrop="@(() => OnDrop(col))"
             @ondrop:preventDefault="true">
            <div class="kanban-col-header">
                <span class="badge bg-secondary">@col</span>
                <span class="count">@(_columns[col].Count)</span>
            </div>

            @if (_columns[col].Count == 0)
            {
                <div class="kanban-empty">Move task here</div>
            }

            @foreach (var t in _columns[col])
            {
                var busy = _busyTasks.Contains(t.Id);

                <TaskKanbanCard
                    @key="t.Id"
                    Task="t"
                    Class="@(busy ? "busy" : null)"
                    draggable="true"
                    @ondragstart="@(() => OnDragStart(t.Id))"
                    @onclick="@(() => _modalDialog.OpenModal())"/>
            }

            <div class="kanban-col-footer">
                <button type="button" class="btn btn-light btn-sm add-btn"
                        title="Create task"
                        @onclick="async () => await _newTaskModal.OpenModalAsync(col)">
                    <span class="plus">+</span>
                </button>
            </div>
        </div>
    }
</div>

@if (!string.IsNullOrWhiteSpace(_error))
{
    <div class="alert alert-danger mt-3">@_error</div>
}

<NewTaskModal
    @ref="_newTaskModal"
    Project="_currentProject"
    OnModalActionSucceeded="OnTaskCreated"
/>

<EditTaskModal @ref="_editTaskModal" TaskId="_currentTaskId" OnModalActionSucceeded="OnTaskSaved"/>
<SplittedModal @ref="_splitModal" TaskId="_currentTaskId" OnModalActionSucceeded="OnTaskSaved"></SplittedModal>

<ModalDialog @ref="_modalDialog" Width="400px">
    <ModalDialogHeader>
        <h5 style="margin: 0;">Modal Dialog</h5>
    </ModalDialogHeader>
    <ModalDialogBody>
        <div style="height: 100%">
            <div style="height: 30px">
                <h6>More Content</h6>
            </div>
            <div style="overflow-y: auto; height: calc(100% - 30px);">
                <p>
                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur at, debitis dolorum ducimus eaque explicabo
                    impedit minima minus modi mollitia nesciunt numquam pariatur perspiciatis, recusandae saepe, vero vitae? Aut
                    deserunt, dolor doloribus incidunt ipsam labore libero magni modi neque numquam quidem quo rerum sequi.
                    Asperiores, autem consectetur culpa cum cupiditate debitis dicta dignissimos dolor dolorem enim, exercitationem
                    facere hic illo illum incidunt ipsam ipsum laudantium nemo nesciunt non nulla numquam optio pariatur porro
                    quaerat, quasi quibusdam quidem similique soluta suscipit tempora ullam vel velit vero vitae voluptas
                    voluptatem? Ad autem cupiditate, deserunt earum et minima nemo ratione reprehenderit veniam voluptate?
                </p>
            </div>
        </div>
    </ModalDialogBody>
    <ModalDialogFooter>
        <div style="display: flex; justify-content: flex-end">
            <button class="btn btn-danger btn-sm" @onclick="@((args) => _modalDialog.CloseModal(args))">Close</button>
        </div>
    </ModalDialogFooter>
</ModalDialog>

@code {
    
}
