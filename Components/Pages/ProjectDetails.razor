@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveServer
@attribute [Authorize]
@page "/Projects/{ProjectId:guid}"

<h2 class="mb-3">@_project?.Name</h2>

@if (_loading)
{
    <p>Загрузка…</p>
}
else if (_project is null)
{
    <p class="text-danger">Проект не найден или нет доступа.</p>
}
else
{
    <p class="text-muted">@_project.Description</p>

    <div class="mt-4">
        <h4>Задачи</h4>
        <p class="text-muted">Сюда добавим CRUD задач в следующей итерации.</p>
    </div>

    @if (_isOwner)
    {
        <div class="mt-5">
            <h4>Участники</h4>
            <div class="mb-2">
                <input class="form-control" placeholder="Email пользователя для приглашения" @bind="_inviteEmail" />
                <button class="btn btn-primary mt-2" @onclick="Invite" disabled="@string.IsNullOrWhiteSpace(_inviteEmail)">Пригласить</button>
                @if (!string.IsNullOrWhiteSpace(_inviteError)) { <div class="text-danger mt-2">@_inviteError</div> }
                @if (!string.IsNullOrWhiteSpace(_inviteOk)) { <div class="text-success mt-2">@_inviteOk</div> }
            </div>
            <ul class="list-group">
                <li class="list-group-item d-flex justify-content-between">
                    <span><strong>Владелец:</strong> @_ownerEmail</span>
                </li>
                @foreach (var m in _members)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@m.User.Email (@m.Role)</span>
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => RemoveMember(m.Id)">Удалить</button>
                    </li>
                }
            </ul>
        </div>
    }
}

@code {
    
}
